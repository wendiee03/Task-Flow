{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  tasks: []\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask(state, action) {\n      state.tasks.push(action.payload);\n    },\n    removeTask(state, action) {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    updateTask(state, action) {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    }\n  }\n});\n\n// Export actions\nexport const {\n  addTask,\n  removeTask,\n  updateTask\n} = tasksSlice.actions;\n\n// Export reducer\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","tasksSlice","name","reducers","addTask","state","action","push","payload","removeTask","filter","task","id","updateTask","index","findIndex","actions","reducer"],"sources":["D:/Projects/Task-Flow/client/src/features/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface Task {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    status: string; // e.g., 'pending', 'completed'\r\n}\r\n\r\ninterface TasksState {\r\n    tasks: Task[];\r\n}\r\n\r\nconst initialState: TasksState = {\r\n    tasks: [],\r\n};\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState,\r\n    reducers: {\r\n        addTask(state, action: PayloadAction<Task>) {\r\n            state.tasks.push(action.payload);\r\n        },\r\n        removeTask(state, action: PayloadAction<number>) {\r\n            state.tasks = state.tasks.filter(task => task.id !== action.payload);\r\n        },\r\n        updateTask(state, action: PayloadAction<Task>) {\r\n            const index = state.tasks.findIndex(task => task.id === action.payload.id);\r\n            if (index !== -1) {\r\n                state.tasks[index] = action.payload;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\n// Export actions\r\nexport const { addTask, removeTask, updateTask } = tasksSlice.actions;\r\n\r\n// Export reducer\r\nexport default tasksSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAa7D,MAAMC,YAAwB,GAAG;EAC7BC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAEC,MAA2B,EAAE;MACxCD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IACDC,UAAUA,CAACJ,KAAK,EAAEC,MAA6B,EAAE;MAC7CD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;IACxE,CAAC;IACDK,UAAUA,CAACR,KAAK,EAAEC,MAA2B,EAAE;MAC3C,MAAMQ,KAAK,GAAGT,KAAK,CAACL,KAAK,CAACe,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAC1E,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QACdT,KAAK,CAACL,KAAK,CAACc,KAAK,CAAC,GAAGR,MAAM,CAACE,OAAO;MACvC;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEJ,OAAO;EAAEK,UAAU;EAAEI;AAAW,CAAC,GAAGZ,UAAU,CAACe,OAAO;;AAErE;AACA,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}